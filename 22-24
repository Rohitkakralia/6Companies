387. First Unique Character in a String
class Solution {
    public int firstUniqChar(String s) {
        int n = s.length();
        Set<Character> set1 = new HashSet<>();
        Set<Character> set2 = new HashSet<>();
        int ans = -1;
        
        for(int i=0; i<n; i++){
            if(!set1.contains(s.charAt(i))){
                set1.add(s.charAt(i));
            }else{
                set2.add(s.charAt(i));
            }
        }
        for(int i=0; i<n; i++){
            if(set1.contains(s.charAt(i)) && !set2.contains(s.charAt(i))){
                ans = i;
                break;
            }
        }
        return ans;
    }
}
--------------------------------------------------------------------------------------------------------------------------------------
3154. Find Number of Ways to Reach the K-th Stair
PENDING

-------------------------------------------------------------------------------------------------------------------------------------
36. Valid Sudoku
class Solution {
    public boolean isValidSudoku(char[][] board) {
        Set seen = new HashSet<>();
        for(int i=0; i<9; i++){
            for(int j=0; j<9; j++){
                char ch = board[i][j];
                if(ch != '.'){
                    if(!seen.add(ch + "row" + i) || 
                        !seen.add(ch + "col" + j) ||
                        !seen.add(ch + "block" + i/3 + "-" + j/3)){
                        return false;
                    }
                }
            }
        }
        return true;
    }
}
